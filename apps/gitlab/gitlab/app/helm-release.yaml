apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab
  namespace: gitlab
spec:
  interval: 5m
  chart:
    spec:
      chart: gitlab
      version: 8.11.2
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: false
    crds: CreateReplace
    remediation:
      retries: 3
    timeout: 40m
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
    timeout: 40m
  valuesFrom:
    - kind: ConfigMap
      name: gitlab-config
      optional: false
  values:
    # Gitlab.rb is likely completely defined in this file.
    global:
      smtp:
        enabled: true
        address: 'smtp.gmail.com'
        authentication: 'login'
        password:
          secret: gitlab-smtp-password
          key: password
        port: 587
        starttls_auto: true
        tls: false
        openssl_verify_mode: 'peer'
      email:
        display_name: 'GitLab'
      certificates:
        # Ensure no secrets are listed here if you don't need custom CAs
        # customCAs:
        # - secret: gitlab-wildcard-tls-ca
        # Or look for a boolean toggle:
        installCustomCAs: false
        https: true
      edition: ce
      redis:
        host: redis.infrastructure.svc.cluster.local
        auth:
          enabled: true
          secret: gitlab-redis-secret
          key: secret
      minio:
        enabled: false
      registry:
        bucket: 'gitlab-registry-storage'
      time_zone: 'America/Los_Angeles'

      ingress:
        enable: true
        configureCertmanager: false
        class: external
        provider: external
        annotations:
          cert-manager.io/cluster-issuer: thefoss-le-prod
        tls:
          secretName: thefoss-org-cf-origin-cert

      appConfig:
        object_store:
          enabled: true
          connection:
            secret: 'gitlab-minio-storage'
            key: 'connection'
        objectStorage:
          config:
            secret: gitlab-minio-storage
            key: connection
        lfs:
          bucket: 'gitlab-lfs-storage'
        artifacts:
          bucket: 'gitlab-artifacts-storage'
        uploads:
          bucket: 'gitlab-uploads-storage'
        packages:
          bucket: 'gitlab-packages-storage'
        externalDiffs:
          bucket: 'gitlab-external-diffs-storage'
        terraformState:
          bucket: 'gitlab-terraform-state-storage'
        ciSecureFiles:
          bucket: 'gitlab-ci-secure-files-storage'
        dependencyProxy:
          bucket: 'gitlab-dependency-proxy-storage'
        backups:
          bucket: 'gitlab-backup-storage'
        omniauth:
          enabled: true
          providers:
            - secret: gitlab-google-oauth2-secret

      psql:
        host: gitlab-cnpg-main-rw.gitlab.svc.cluster.local
        port: 5432
        database: gitlabhq_production
        username: gitlab
        password:
          secret: gitlab-cnpg-main-app
          key: password
        # ssl: {} # Configure SSL if your external DB requires it
        # preparedStatements: false # Set to true if supported and desired

    gitlab:
      webservice:
        ingress:
          tls:
            secretName: gitlab-webservice-tls
      kas:
        ingress:
          tls:
            secretName: gitlab-kas-tls

      gitlab-shell:
        service:
          type: LoadBalancer

      toolbox:
        backups:
          objectStorage:
            backend: s3
            config:
              secret: gitlab-s3-configuration
              key: connection


    gitlab-runner:
      install: false

    registry:
      ingress:
        tls:
          secretName: gitlab-registry-tls

    gitaly:
      ingress:
        tls:
          secretName: gitlab-gitaly-tls
      resources:
        requests:
          cpu: "500m"
          memory: "1Gi"
        limits:
          cpu: "2"
          memory: "2Gi"

    redis:
      install: false

    minio:
      ingress:
        tls:
          secretName: minio-tls

    certmanager-issuer:
      email: you@example.com

    certmanager:
      install: false

    nginx-ingress:
      enabled: false

    nginx:
      controller:
        scope:
          enabled: false

    ingress:
      configureCertmanager: false
      enabled: false

    prometheus:
      install: false

    postgresql:
      install: false

